(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
      (begin (set! balance (- balance amount))
	     balance)
      "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (error-pwd amount)
    "Incorrect password")
 (define (test-pwd pwd)
 (let ((counter 0)) 
   (newline)
   (display "test-pwd")
   (display pwd)
   (if (eq? pwd password)
	(begin (set! counter 0)
	      #t)	
	(begin (set! counter (+ 1 counter))
	       (if (> counter 3)
		 (display "Call the cops") 
	       #f)))))
  (define (dispatch pwd m)
    (if (test-pwd pwd) 
	    (cond ((eq? m 'withdraw) withdraw)
		  ((eq? m 'deposit) deposit)
		  (else (error "Unknown request:
			       MAKE-ACCOUNT" m))) 
       error-pwd))
dispatch)
(define (make-joint account old-pwd joint-pwd)
  (define (joint-account pwd operation)
    (if (eq? pwd joint-pwd)
      (account old-pwd operation)
      "Incorrect Password"))
  joint-account)
(define peter-acc (make-account 100 'open-sesame))
(define paul-acc (make-joint peter-acc 'open-sesame 'rosebud))
(define (func x)
  (let ((y 1))
    (if (not (= x y))
      (set! y 0))
    y))
(+ (func 0) (func 1))
