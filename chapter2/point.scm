(define (average x y) (/ (+ x y) 2))
(define (make-point x y)
  (cons x y))
(define x-point car)
(define y-point cdr)
(define (make-segment point-1 point-2)
  (cons point-1 point-2))
(define segment-start car)
(define segment-end cdr)
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))
(define (print-segment segment)
  (print-point (segment-start segment))
  (display "to")
  (print-point (segment-end segment)))
(define (midpoint-segment segment)
  (let ((x1 (x-point (segment-start segment)))
        (y1 (y-point (segment-start segment)))
        (x2 (x-point (segment-end segment)))
        (y2 (y-point (segment-end segment))))
    (make-point (average x1 x2) (average y1 y2))))
(define point1 (make-point 1 2))
(define point2 (make-point 2 4))
(define segment1 (make-segment point1 point2))
(print-point (midpoint-segment segment1))
