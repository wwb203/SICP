(define (cubic-root-iter guess x)
  (if (good-enough? guess x)
    (+ guess 0.0)
    (sqrt-iter (improve guess x) x)))
(define (good-enough? guess x)
  (< (abs (- (* guess guess guess) x)) (* 0.001 x)))
(define (improve y x)
  (/ (+ (/ x (* y y)) (* 2 y)) 3))
(define (cubic-root x) (cubic-root-iter  1 x))
(cubic-root 8)
