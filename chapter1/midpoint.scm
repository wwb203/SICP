(define average (lambda (x y) (/ (+ x y) 2)))
(define (close-enough? x y)
  (< (abs (- x y)) 0.001))
(define (search-zero f p n)
  (let ((mid-point (average p n)))
    (if (close-enough? p n)
      mid-point
      (let ((test-variable (f mid-point)))
        (if (positive? test-variable)
          (search-zero f mid-point n)
          (if (negative? test-variable)
            (search-zero f p mid-point)
            mid-point))))))
(define (half-interval-method f a b)
  (let ((fa (f a))
        (fb (f b)))
    (cond ((AND (positive? fa) (negative? fb))
           (search-zero f a b))
          ((AND (positive? fb) (negative? fa))
           (search-zero f b a))
          (else (error "Values are not of opposite sign" a b)))))
(half-interval-method sin 2.0 4.0)
