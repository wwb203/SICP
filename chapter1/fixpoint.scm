(define (fixpoint f)
  (define (close-enough? x y)
    (< (abs (- x y)) 0.0001))
  (define (try guess)
    (newline)
    (display guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
        next
        (try next))))
  (try 2.0))
;(fixpoint (lambda (x) (+ x (/ 1 x))))
;(fixpoint cos)
(fixpoint (lambda (x) (/ (log 1000) (log x))))
